DMHisto <- all_fruit_data %>%
ggplot(aes(x = DryMatter)) +
xlim(12, 24)+
geom_histogram(aes(y =..density.., fill = VineTreatment, color=VineTreatment), breaks = seq(12, 24, by = 0.3)) +
ggtitle("Dry Matter distribution by vine") +
labs(x= "Dry Matter (%)") +
geom_text(aes(175, 14.5, label = vine_label),
size = 4,
data = vine_order) +
facet_grid(vars(VineRow), vars(VineTreatment), labeller = labeller(VineTreatment = column_labels)) +
theme(
plot.margin = margin(0.2,0.2, 0.2,0.2, "cm"),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid = element_line(color = "gray 90"),
panel.border = element_rect(color = "black", fill=NA),
legend.position = "none",
strip.background.y=element_blank(),
strip.text.y = element_blank(),
strip.background.x = element_rect(colour = "black", fill="gray 80"),
strip.text.x = element_text(size = 11)) +
scale_colour_manual(values=c("grey20", "grey20", "grey20"))+
scale_fill_manual(values=c("#4256FF", "#FF41A3", "#00D10D"))
DMHisto
DMHisto <- all_fruit_data %>%
ggplot(aes(x = DryMatter)) +
xlim(12, 24)+
geom_histogram(aes(y =..density.., fill = VineTreatment, color=VineTreatment), breaks = seq(12, 24, by = 0.3)) +
ggtitle("Dry Matter distribution by vine") +
labs(x= "Dry Matter (%)") +
geom_text(aes(label = vine_label),
size = 4,
data = vine_order) +
facet_grid(vars(VineRow), vars(VineTreatment), labeller = labeller(VineTreatment = column_labels)) +
theme(
plot.margin = margin(0.2,0.2, 0.2,0.2, "cm"),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid = element_line(color = "gray 90"),
panel.border = element_rect(color = "black", fill=NA),
legend.position = "none",
strip.background.y=element_blank(),
strip.text.y = element_blank(),
strip.background.x = element_rect(colour = "black", fill="gray 80"),
strip.text.x = element_text(size = 11)) +
scale_colour_manual(values=c("grey20", "grey20", "grey20"))+
scale_fill_manual(values=c("#4256FF", "#FF41A3", "#00D10D"))
DMHisto
DMHisto <- all_fruit_data %>%
ggplot(aes(x = DryMatter)) +
xlim(12, 24)+
geom_histogram(aes(y =..density.., fill = VineTreatment, color=VineTreatment), breaks = seq(12, 24, by = 0.3)) +
ggtitle("Dry Matter distribution by vine") +
labs(x= "Dry Matter (%)") +
geom_text(aes(label = vine_label),
size = 4,
data = vine_order) +
facet_grid(vars(VineRow), vars(VineTreatment), labeller = labeller(VineTreatment = column_labels)) +
theme(
plot.margin = margin(0.2,0.2, 0.2,0.2, "cm"),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid = element_line(color = "gray 90"),
panel.border = element_rect(color = "black", fill=NA),
legend.position = "none",
strip.background.y=element_blank(),
strip.text.y = element_blank(),
strip.background.x = element_rect(colour = "black", fill="gray 80"),
strip.text.x = element_text(size = 11)) +
scale_colour_manual(values=c("grey20", "grey20", "grey20"))+
scale_fill_manual(values=c("#4256FF", "#FF41A3", "#00D10D"))
DMHisto
DMHisto <- all_fruit_data %>%
ggplot(aes(x = DryMatter)) +
xlim(12, 24)+
geom_histogram(aes(y =..density.., fill = VineTreatment, color=VineTreatment), breaks = seq(12, 24, by = 0.3)) +
ggtitle("Dry Matter distribution by vine") +
labs(x= "Dry Matter (%)") +
geom_text(aes(1, 1, label = vine_label),
size = 4,
data = vine_order) +
facet_grid(vars(VineRow), vars(VineTreatment), labeller = labeller(VineTreatment = column_labels)) +
theme(
plot.margin = margin(0.2,0.2, 0.2,0.2, "cm"),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid = element_line(color = "gray 90"),
panel.border = element_rect(color = "black", fill=NA),
legend.position = "none",
strip.background.y=element_blank(),
strip.text.y = element_blank(),
strip.background.x = element_rect(colour = "black", fill="gray 80"),
strip.text.x = element_text(size = 11)) +
scale_colour_manual(values=c("grey20", "grey20", "grey20"))+
scale_fill_manual(values=c("#4256FF", "#FF41A3", "#00D10D"))
DMHisto
DMHisto <- all_fruit_data %>%
ggplot(aes(x = DryMatter)) +
xlim(12, 24)+
geom_histogram(aes(y =..density.., fill = VineTreatment, color=VineTreatment), breaks = seq(12, 24, by = 0.3)) +
ggtitle("Dry Matter distribution by vine") +
labs(x= "Dry Matter (%)") +
geom_text(aes(5, 5, label = vine_label),
size = 4,
data = vine_order) +
facet_grid(vars(VineRow), vars(VineTreatment), labeller = labeller(VineTreatment = column_labels)) +
theme(
plot.margin = margin(0.2,0.2, 0.2,0.2, "cm"),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid = element_line(color = "gray 90"),
panel.border = element_rect(color = "black", fill=NA),
legend.position = "none",
strip.background.y=element_blank(),
strip.text.y = element_blank(),
strip.background.x = element_rect(colour = "black", fill="gray 80"),
strip.text.x = element_text(size = 11)) +
scale_colour_manual(values=c("grey20", "grey20", "grey20"))+
scale_fill_manual(values=c("#4256FF", "#FF41A3", "#00D10D"))
DMHisto
DMHisto <- all_fruit_data %>%
ggplot(aes(x = DryMatter)) +
xlim(12, 24)+
geom_histogram(aes(y =..density.., fill = VineTreatment, color=VineTreatment), breaks = seq(12, 24, by = 0.3)) +
ggtitle("Dry Matter distribution by vine") +
labs(x= "Dry Matter (%)") +
geom_text(aes(1, 5, label = vine_label),
size = 4,
data = vine_order) +
facet_grid(vars(VineRow), vars(VineTreatment), labeller = labeller(VineTreatment = column_labels)) +
theme(
plot.margin = margin(0.2,0.2, 0.2,0.2, "cm"),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid = element_line(color = "gray 90"),
panel.border = element_rect(color = "black", fill=NA),
legend.position = "none",
strip.background.y=element_blank(),
strip.text.y = element_blank(),
strip.background.x = element_rect(colour = "black", fill="gray 80"),
strip.text.x = element_text(size = 11)) +
scale_colour_manual(values=c("grey20", "grey20", "grey20"))+
scale_fill_manual(values=c("#4256FF", "#FF41A3", "#00D10D"))
DMHisto
DMHisto <- all_fruit_data %>%
ggplot(aes(x = DryMatter)) +
xlim(12, 24)+
geom_histogram(aes(y =..density.., fill = VineTreatment, color=VineTreatment), breaks = seq(12, 24, by = 0.3)) +
ggtitle("Dry Matter distribution by vine") +
labs(x= "Dry Matter (%)") +
geom_text(aes(5, 0.5, label = vine_label),
size = 4,
data = vine_order) +
facet_grid(vars(VineRow), vars(VineTreatment), labeller = labeller(VineTreatment = column_labels)) +
theme(
plot.margin = margin(0.2,0.2, 0.2,0.2, "cm"),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid = element_line(color = "gray 90"),
panel.border = element_rect(color = "black", fill=NA),
legend.position = "none",
strip.background.y=element_blank(),
strip.text.y = element_blank(),
strip.background.x = element_rect(colour = "black", fill="gray 80"),
strip.text.x = element_text(size = 11)) +
scale_colour_manual(values=c("grey20", "grey20", "grey20"))+
scale_fill_manual(values=c("#4256FF", "#FF41A3", "#00D10D"))
DMHisto
FWvsDM <-
all_fruit_data %>%
filter(!is.na(ShootTypeCoarse)) %>%
filter(FreshWeight>50 & DryMatter>12) %>%
ggplot(aes(x = FreshWeight, y = DryMatter)) +
geom_point(aes(col= ShootTypeCoarse), size=0.1) +
geom_smooth(method = "lm", aes(group=ShootTypeCoarse, col=ShootTypeCoarse)) +
facet_grid(vars(VineRow), vars(VineTreatment), labeller = labeller(VineTreatment = column_labels)) +
geom_text(aes(175, 14.5, label = vine_label),
size = 4,
data = vine_order) +
ggtitle("Fresh Weight vs Dry Matter by vine & shoot type") +
labs(col='Shoot Type', size=20, x= "Fresh Weight (g)", y = "Dry Matter (%)") +
guides(color=guide_legend(override.aes=list(fill="white"))) +
theme(
plot.margin = margin(0.2,3,0.2,0.2, "cm"),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid = element_line(color = "gray 90"),
panel.border = element_rect(color = "black", fill=NA),
legend.justification = c(1, 1),
legend.position = c(1.14,1),
legend.text=element_text(size=rel(0.9)),
strip.background.y=element_blank(),
strip.text.y = element_blank(),
strip.background.x = element_rect(colour = "black", fill="gray 80"),
strip.text.x = element_text(size = 11))
FWvsDM
DMHisto <- all_fruit_data %>%
ggplot(aes(x = DryMatter)) +
xlim(12, 24)+
geom_histogram(aes(y =..density.., fill = VineTreatment, color=VineTreatment), breaks = seq(12, 24, by = 0.3)) +
ggtitle("Dry Matter distribution by vine") +
labs(x= "Dry Matter (%)") +
facet_grid(vars(VineRow), vars(VineTreatment), labeller = labeller(VineTreatment = column_labels)) +
geom_text(aes(5, 0.5, label = vine_label),
size = 4,
data = vine_order) +
theme(
plot.margin = margin(0.2,0.2, 0.2,0.2, "cm"),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid = element_line(color = "gray 90"),
panel.border = element_rect(color = "black", fill=NA),
legend.position = "none",
strip.background.y=element_blank(),
strip.text.y = element_blank(),
strip.background.x = element_rect(colour = "black", fill="gray 80"),
strip.text.x = element_text(size = 11)) +
scale_colour_manual(values=c("grey20", "grey20", "grey20"))+
scale_fill_manual(values=c("#4256FF", "#FF41A3", "#00D10D"))
DMHisto
DMHisto <- all_fruit_data %>%
ggplot(aes(x = DryMatter)) +
xlim(12, 24)+
geom_histogram(aes(y =..density.., fill = VineTreatment, color=VineTreatment), breaks = seq(12, 24, by = 0.3)) +
ggtitle("Dry Matter distribution by vine") +
labs(x= "Dry Matter (%)") +
facet_grid(vars(VineRow), vars(VineTreatment), labeller = labeller(VineTreatment = column_labels)) +
geom_text(aes(10, 0.1, label = vine_label),
size = 4,
data = vine_order) +
theme(
plot.margin = margin(0.2,0.2, 0.2,0.2, "cm"),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid = element_line(color = "gray 90"),
panel.border = element_rect(color = "black", fill=NA),
legend.position = "none",
strip.background.y=element_blank(),
strip.text.y = element_blank(),
strip.background.x = element_rect(colour = "black", fill="gray 80"),
strip.text.x = element_text(size = 11)) +
scale_colour_manual(values=c("grey20", "grey20", "grey20"))+
scale_fill_manual(values=c("#4256FF", "#FF41A3", "#00D10D"))
DMHisto
vine_order <- data.frame(vine_label = paste("Vine", c(1:4, 6, 5, 9, 8, 7)),
VineRow = c(rep(1:3, each = 3)),
VineTreatment = c("1 Conv", "2 Stru", "3 Spur", "1 Conv", "2 Stru", "3 Spur", "1 Conv", "2 Stru", "3 Spur"))
vine_labels <- paste("Vine", c(1:9))
names(vine_labels) <- c(1:9)
column_labels <- c("Conventional", "Strung", "Spur")
names(column_labels) <- c("1 Conv", "2 Stru", "3 Spur")
DMHisto <- all_fruit_data %>%
ggplot(aes(x = DryMatter)) +
xlim(12, 24)+
geom_histogram(aes(y =..density.., fill = VineTreatment, color=VineTreatment), breaks = seq(12, 24, by = 0.3)) +
ggtitle("Dry Matter distribution by vine") +
labs(x= "Dry Matter (%)") +
facet_grid(vars(VineRow), vars(VineTreatment), labeller = labeller(VineTreatment = column_labels)) +
geom_text(aes(10, 0.1, label = vine_label),
size = 4,
data = vine_order) +
theme(
plot.margin = margin(0.2,0.2, 0.2,0.2, "cm"),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid = element_line(color = "gray 90"),
panel.border = element_rect(color = "black", fill=NA),
legend.position = "none",
strip.background.y=element_blank(),
strip.text.y = element_blank(),
strip.background.x = element_rect(colour = "black", fill="gray 80"),
strip.text.x = element_text(size = 11)) +
scale_colour_manual(values=c("grey20", "grey20", "grey20"))+
scale_fill_manual(values=c("#4256FF", "#FF41A3", "#00D10D"))
DMHisto
ggsave("Dry Matter distribution by vine.png", path = here("output"),  dpi = 2000)
DMHisto <- all_fruit_data %>%
ggplot(aes(x = DryMatter)) +
xlim(12, 24)+
geom_histogram(aes(y =..density.., fill = VineTreatment, color=VineTreatment), breaks = seq(12, 24, by = 0.3)) +
ggtitle("Dry Matter distribution by vine") +
labs(x= "Dry Matter (%)") +
facet_grid(vars(VineRow), vars(VineTreatment), labeller = labeller(VineTreatment = column_labels)) +
#geom_text(aes(10, 0.1, label = vine_label),
#		  size = 4,
#		  data = vine_order) +
theme(
plot.margin = margin(0.2,0.2, 0.2,0.2, "cm"),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid = element_line(color = "gray 90"),
panel.border = element_rect(color = "black", fill=NA),
legend.position = "none",
strip.background.y=element_blank(),
strip.text.y = element_blank(),
strip.background.x = element_rect(colour = "black", fill="gray 80"),
strip.text.x = element_text(size = 11)) +
scale_colour_manual(values=c("grey20", "grey20", "grey20"))+
scale_fill_manual(values=c("#4256FF", "#FF41A3", "#00D10D"))
DMHisto
knitr::opts_chunk$set(echo = TRUE)
library(agricolae)
library(shadowtext)
library(lsmeans)
library(AICcmodavg)
library(car)
library(ggpubr)
library(Rmisc)
library(tidygraph)
library(tidyverse)
library(ggraph)
library(magrittr)
library(htmlwidgets)
library(plotly)
library(ggplot2)
#library(gplots)
library(lubridate)
library(scales)
library(cowplot)
library(here)
library(viridis)
library(ggrepel)
source(here("code/theme.R"))
# checking for output folder
if(!dir.exists(here("output"))){
dir.create(here("output"))
for(i in 1:9)
dir.create(here(
paste("output/Vine", i)))
}
if(!dir.exists(here("workspace")))
dir.create(here("workspace"))
theme_patrick <- function() {
theme_bw() %+replace%
theme(plot.title = element_text(hjust = 0.5,
size = 20,
margin = margin(b = 5))
)
}
theme_base_graph <- function() {
theme_bw() %+replace%
theme(plot.title = element_text(size = 18, hjust = 0.5),
axis.ticks = element_blank(),
axis.text = element_blank(),
strip.text.x = element_text(size = 12),
strip.text.y = element_blank())
}
vine_labels <- paste("Vine", c(1:9))
names(vine_labels) <- c(1:9)
column_labels <- c("Conventional", "Strung", "Spur")
names(column_labels) <- c("1 Conv", "2 Stru", "3 Spur")
# relational information for each of the quadrants
quadrant_info <-
data.frame(Quadrant = 1:36,
OffsetX = rep(c(1000, 500, 0, 0, 500, 1000), each = 6),
OffsetY = rep(c(2000, 1000, 0, 0, 1000, 2000), 6),
MultiplierX = rep(c(-1,1), each = 18),
MultiplierY = rep(rep(c(-1,1), each = 3), 6),
QuadrantFromLeader = rep(c(3:1, 1:3), 6),
QuadrantFromTrunk = rep(c(3:1, 1:3), each = 6),
NorthSouth = rep(c("S", "N"), each = 18),
EastWest = rep(rep(
c("W", "E"),
each = 3
),
6)
)
# x&y coords for overlaying the quadrant IDs
# only works when vine is plotted with leader running horizontal (swap x and y).
quadrant_labels <- data.frame(x = rep(c(-1250, -750, -250, 250, 750, 1250), each = 6),
y = rep(c(2500, 1500, 500, -500, -1500, -2500), 6),
label = 1:36)
flowering_dates <- read_csv(here("input/flowering_dates.csv")) %>%
mutate(FloweringColour = tolower(FloweringColour),
FloweringDate = dmy(FloweringDate))
source(here("code/data_import/shoot_leaf_area_import_and_plot.R"))
redo <- TRUE
if(!file.exists(
c(here("workspace/all_fruit_data.csv"),
here("workspace/all_arch_data.csv"),
here("workspace/all_shoot_data.csv"))) || redo){
source(here("code/data_import/architecture_data_import_and_merge.R"))
source(here("code/data_import/shoot_data_import_and_merge.R"))
source(here("code/data_import/fruit_data_import_and_merge.R"))
source(here("code/data_import/fruit_exclusions.R"))
write_csv(all_fruit_data, here("workspace/all_fruit_data.csv"), na = "")
write_csv(all_arch_data, here("workspace/all_arch_data.csv"), na = "")
write_csv(all_shoot_data, here("workspace/all_shoot_data.csv"), na = "")
} else {
# Need to set column types for all as only the first 1000 rows are used for
# imputing types which doesnt work for scarce columns (seed counts etc.)
all_fruit_data <- read_csv(here("workspace/all_fruit_data.csv"), col_types = "dddccccddcDcddddddddddddddddccc")
all_arch_data <- read_csv(here("workspace/all_arch_data.csv"), col_types = "dddccccdddddddddcc")
all_shoot_data <- read_csv(here("workspace/all_shoot_data.csv"), col_types = "dcdddcccccdc")
}
# Factors that allow for fixing vine positions in grid plots
all_arch_data %<>%
mutate(VineTreatmentOrder = factor(VineUUID, levels = c(1, 2, 3, 4, 6, 5, 9, 8, 7)),
VineTreatment = ifelse(VineUUID %in% c(1, 4, 9), "1 Conv",
ifelse(VineUUID %in% c(2, 6, 8), "2 Stru",
ifelse(VineUUID %in% c(3, 5, 7), "3 Spur", NA))),
VineRow = ifelse(VineUUID %in% c(1:3), 1,
ifelse(VineUUID %in% c(4:6), 2,
ifelse(VineUUID %in% c(7:9), 3, NA))))
# Pull in x&y coords to shoot and fruit data frames
all_shoot_data %<>%
left_join(select(all_arch_data, ShootUUID, SegmentStartX, SegmentStartY,SegmentEndX, SegmentEndY))
all_fruit_data %<>%
left_join(select(all_arch_data, ShootUUID, SegmentEndX, SegmentEndY))
# Factors that allow for fixing vine positions in grid plots
# and 'binning' fruit metrics for visual display
all_fruit_data %<>%
mutate(VineTreatmentOrder = factor(VineUUID, levels = c(1, 2, 3, 4, 6, 5, 9, 8, 7)),
VineTreatment = ifelse(VineUUID %in% c(1, 4, 9), "1 Conv",
ifelse(VineUUID %in% c(2, 6, 8), "2 Stru",
ifelse(VineUUID %in% c(3, 5, 7), "3 Spur", NA))),
VineRow = ifelse(VineUUID %in% c(1:3), 1,
ifelse(VineUUID %in% c(4:6), 2,
ifelse(VineUUID %in% c(7:9), 3, NA)))) %>%
mutate(dm_bins = cut(DryMatter, c(0,14:23,30),
include.lowest = TRUE,
labels = c("< 14", paste(14:22, "to", 15:23), "> 23")),
fw_bins = cut(FreshWeight, c(0, 74, 84, 95, 108, 118, 128, 138, 151, 180, 210, 240),
include.lowest = TRUE,
right = FALSE,
labels = c("< 74g", paste("count", c(42, 39, 36, 33, 30, 27, 25, 22, 18, 16)))),
hue_bins = cut(HueAngle1, seq(0, 120, 5),
labels = paste(seq(0, 115, 5), "to", seq(5, 120, 5))),
ssc_bins = cut(SolubleSolidsContent, seq(5, 20, 1.5),
include.lowest = TRUE,
labels = paste(seq(5, 18.5, 1.5), "to", seq(6.5, 20, 1.5))),
firm_bins = cut(Firmness1, seq(0, 11, 1),
include.lowest = TRUE,
labels = paste(0:10, "to", 1:11)))
# Replacing X-SNA values in the ShootUUID column which result from concatenating the X and S characters with the 		ShootID value
all_fruit_data <- all_fruit_data %>%
mutate(ShootUUID=replace(ShootUUID, ShootUUID=="1-SNA", NA),
ShootUUID=replace(ShootUUID, ShootUUID=="2-SNA", NA),
ShootUUID=replace(ShootUUID, ShootUUID=="3-SNA", NA),
ShootUUID=replace(ShootUUID, ShootUUID=="4-SNA", NA),
ShootUUID=replace(ShootUUID, ShootUUID=="5-SNA", NA),
ShootUUID=replace(ShootUUID, ShootUUID=="6-SNA", NA),
ShootUUID=replace(ShootUUID, ShootUUID=="7-SNA", NA),
ShootUUID=replace(ShootUUID, ShootUUID=="8-SNA", NA),
ShootUUID=replace(ShootUUID, ShootUUID=="9-SNA", NA))
# make a days since start of flowering column from FloweringDates
all_fruit_data <- all_fruit_data %>%
mutate(FloweringDays = case_when(
FloweringDate== as.Date("2019-10-27") ~ "1",
FloweringDate== as.Date("2019-10-29") ~ "3",
FloweringDate== as.Date("2019-10-31") ~ "5",
FloweringDate== as.Date("2019-11-02") ~ "7",
FloweringDate== as.Date("2019-11-04") ~ "9",
FloweringDate== as.Date("2019-11-06") ~ "11",
FloweringDate== as.Date("2019-11-08") ~ "13",
FloweringDate== as.Date("2019-11-10") ~ "15",
FloweringDate== as.Date("2019-11-12") ~ "17"))
write_csv(all_fruit_data, here("workspace/all_fruit_data.csv"), na = "")
# maximum 9 fruit per shoot
angle <- 2 * pi / 9
pointXOffset <- function (central_xpoint, radius, point_pos){
return(central_xpoint + radius * cos(point_pos * angle))
}
pointYOffset <- function (central_ypoint, radius, point_pos){
return(central_ypoint + radius * sin(point_pos * angle))
}
FlowerHisto <-
all_fruit_data %>%
filter(!is.na(FloweringDate)) %>%
filter(FloweringDate >= as.Date("2019-10-31"), FloweringDate <= as.Date("2019-11-10")) %>%
mutate(FloweringDateBar = FloweringDate) %>%
ggplot(aes(x = FloweringDateBar)) +
geom_bar(aes(y = ((..count..)/sum(..count..))*100), color = "black", fill="darkgoldenrod1", position = position_dodge(width = 1), width=2, ) +
scale_x_date(breaks = date_breaks("2 day"),date_labels = "%d-%b", expand = c(0.01,0.01)) +
scale_y_continuous(breaks = seq(0,80, by = 15), limits = c(0,80), expand = c(0,0)) +
labs(x= "Date (2019)", y="Newly opened flowers (%)") +
theme(
plot.margin = margin(0.2,0.2,0.2,0.2, "cm"),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid = element_line(color = "gray 90"),
panel.grid.minor = element_blank(),
panel.border = element_rect(color = "black", fill=NA),
legend.justification = c(1, 1),
legend.position = c(1.14,1),
legend.text=element_text(size=rel(0.9)),
strip.background.y=element_blank(),
strip.text.y = element_blank(),
strip.background.x = element_rect(colour = "black", fill="gray 80"),
strip.text.x = element_text(size = 11))
FlowerHisto
FlwrTemp2DF <- read_csv(here("input/flowering_weather.csv")) %>%
mutate(FlTempDate = dmy(Date))
AirTemp <-
FlwrTemp2DF %>%
ggplot(aes(x = FlTempDate)) +
geom_line(aes(x = FlTempDate, y = MaxTemp, col="Max"), size = 1) +
geom_line(aes(x = FlTempDate, y = MeanTemp, col="Mean"), size = 1) +
geom_line(aes(x = FlTempDate, y = MinTemp, col="Min"), size = 1) +
scale_x_date(breaks = date_breaks("2 day"),date_labels = "%d-%b", limits= c(as.Date("2019-10-30"), as.Date("2019-11-11")), expand = c(-0.00,-0.00)) +
scale_y_continuous(limits = c(0,35), breaks = seq(0,35, by = 5)) +
labs(x= "Date (2019)", y="Air temperature (Â°C)") +
scale_color_manual(name = "", values = c("Max" = "red1", "Mean" = "black", "Min" = "blue1")) +
theme(
plot.margin = margin(0.2,0.2,0.2,0.2, "cm"),
panel.background = element_rect(fill = 'white', colour = 'black'),
panel.grid = element_line(color = "gray 90"),
panel.grid.minor = element_blank(),
panel.border = element_rect(color = "black", fill=NA),
legend.justification = c(0, 0),
legend.position = c(0.75,0.03),
legend.text=element_text(size=rel(0.8)),
strip.background.y=element_blank(),
strip.text.y = element_blank(),
strip.background.x = element_rect(colour = "black", fill="gray 80"),
legend.key = element_rect(colour = NA, fill = NA),
legend.background = element_rect(linetype = 1, size = 0.5, colour = "black"),
legend.margin = margin(-1, 3, 0, 3),
legend.title = element_blank(),
strip.text.x = element_text(size = 11))
AirTemp
plot_grid(AirTemp, FlowerHisto,
labels = c("a)", "b)"), label_size = 12, ncol = 1, nrow = 2, scale = 0.98)
ggsave("Flower timing and air temp panelled.png", path = here("output"), height = 6, width = 4.5, dpi = 2000)
ggsave("Flower timing and air temp panelled.jpg", path = here("output"), height = 6, width = 4.5, dpi = 500)
